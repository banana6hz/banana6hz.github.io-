(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{582:function(t,s,a){"use strict";a.r(s);var n=a(56),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"动态路由"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动态路由"}},[t._v("#")]),t._v(" 动态路由")]),t._v(" "),a("p",[t._v("动态路由就是动态地非配路由权限。根据不同的场景来分配你可以访问哪些路由(页面)，最简单常见的就是角色分配，比如系统有普通用户和管理员两种角色，有些页面只能管理员能访问，普通用户不能。动态路由的职责就是给不同的角色分配他们能访问的路由。")]),t._v(" "),a("p",[a("strong",[t._v("动态路由的实现")]),t._v("\n实现思路：登陆之后后台返回路由列表，前端把后台传的这些列表填加到路由上")]),t._v(" "),a("p",[t._v("首先一般路由会分为两种：")]),t._v(" "),a("ul",[a("li",[t._v("通用路由: 不需要动态判断权限的路由，eg:登陆页，通用页")]),t._v(" "),a("li",[t._v("动态路由: 需要动态判断权限并通过 "),a("code",[t._v("addRoutes")]),t._v(" 动态添加的页面")])]),t._v(" "),a("p",[t._v("首先在 "),a("code",[t._v("router.js")]),t._v(" 定义通用路由")]),t._v(" "),a("p",[t._v("定义一个过滤路由的函数，遍历后台传回来的路由字符串，转换为组件对象")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//因为后台传过来的component是一个字符串，前端需要处理一下")]),t._v("\nroute"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("component")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("@/")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("routeMap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("route"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("创建路由守卫，在路由钩子函数"),a("code",[t._v("router.beforeEach")]),t._v("判断是否可访问指定的页面\n首先判断是否登陆，然后判断是否加载了动态路由，\n将过滤出来的路由组件通过"),a("code",[t._v("router.addRouter")]),t._v("动态添加路由，并存入 VueX 的 state 中")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//每次添加前需要重置一下")]),t._v("\nrouter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("match "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createRouter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("routes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("match"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//重置路由")]),t._v("\nrouter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addRoutes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("routes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 动态添加可访问路由表")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);