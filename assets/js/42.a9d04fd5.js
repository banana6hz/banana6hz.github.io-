(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{515:function(t,s,e){"use strict";e.r(s);var a=e(56),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"typescript"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#typescript"}},[t._v("#")]),t._v(" TypeScript")]),t._v(" "),e("p",[e("code",[t._v("TypeScript")]),t._v(" 是 "),e("code",[t._v("JavaScript")]),t._v(" 的一个超集,支持 ECMAScript 6 标准。听起来敲厉害的是不是 🧐")]),t._v(" "),e("h2",{attrs:{id:"ts的数据类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ts的数据类型"}},[t._v("#")]),t._v(" TS的数据类型")]),t._v(" "),e("p",[t._v("JS有很多种数据类型：null、undefined、boolean、string、number、symbol、object。在JS中，值是可以随时改变变量的类型的。")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" bool "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nbool "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"str"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 此时变量bool就从boolean转换成string了")]),t._v("\n")])])]),e("p",[t._v("而在TS里不会允许这样的变化，因为他是一种强类型语言。那他又有哪些类型呢？")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("boolean")]),t._v(" "),e("code",[t._v("number")]),t._v(" "),e("code",[t._v("string")]),t._v(" "),e("code",[t._v("null")]),t._v(" "),e("code",[t._v("undefined")]),t._v(" "),e("code",[t._v("symbol")])]),t._v(" "),e("li",[e("code",[t._v("null")]),t._v(" 和 "),e("code",[t._v("undefined")]),t._v(" 只能被赋值为null和undefined,"),e("code",[t._v("null")]),t._v(" 和 "),e("code",[t._v("undefined")]),t._v("类型是所有类型的子类型？？")]),t._v(" "),e("li",[e("code",[t._v("void")]),t._v(" 空类型")]),t._v(" "),e("li",[e("code",[t._v("any")]),t._v("类型")]),t._v(" "),e("li",[t._v("类型判断：如果变量在声明的时候，没有定义其类型，会被标示为默认类型")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" lhz "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"banana"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// lhz会被自动标示为string类型")]),t._v("\nlhz "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//报错")]),t._v("\n")])])]),e("ul",[e("li",[t._v("联合类型")]),t._v(" "),e("li",[e("code",[t._v("enum")]),t._v(" 枚举：用于取值被限定在一定范围内的场景，比如一周只能有七天，颜色限定为红绿蓝等。")]),t._v(" "),e("li",[t._v("数组泛型")]),t._v(" "),e("li",[t._v("数组类型")]),t._v(" "),e("li",[t._v("元组类型")]),t._v(" "),e("li",[t._v("函数类型")])])])}),[],!1,null,null,null);s.default=n.exports}}]);