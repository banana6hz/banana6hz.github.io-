(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{565:function(a,s,t){"use strict";t.r(s);var e=t(56),r=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"_1-webpack-配置中用过哪些-loader-都有什么作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-webpack-配置中用过哪些-loader-都有什么作用"}},[a._v("#")]),a._v(" ◻️ 1. Webpack 配置中用过哪些 Loader ？都有什么作用？")]),a._v(" "),t("p",[a._v("首先我们要知道为什么需要loader，这是因为webpack默认只能处理js和json文件，当遇到一些比如css这样的文件时，需要先将这些文件进行转化成webpack能识别的文件，这就需要loader来对不同类型的文件进行处理了。\nwebpack 支持 loader 的链式调用，即一个文件可以经多个 loader 处理。当一个文件使用多个 loader 处理时，他的处理顺序是倒序的，即传入 loader 数组的从右到左执行。")]),a._v(" "),t("ul",[t("li",[a._v("css-loader ：负责解析css代码, 处理css中的依赖，将多个css文件整合到一起")]),a._v(" "),t("li",[a._v("style-loader ：将处理好的 css 通过 style 标签的形式添加到页面上。(核心逻辑：通过动态添加 style 标签的方式，将样式引入页面)")]),a._v(" "),t("li",[a._v("postcss-loader：自动添加 CSS3 部分属性的浏览器前缀（eg:transform: translateX(-50%);，需要加上不同的浏览器前缀)")]),a._v(" "),t("li",[a._v("less-loader:  处理less文件")]),a._v(" "),t("li",[a._v("sass-loader：处理sass文件，注意还需要搭配 node-sass")]),a._v(" "),t("li",[a._v("file-loader：解决图片引入问题，比如background样式用url引入背景图，file-loader可以解析项目中的url引入（不仅限于css），根据我们的配置，将图片拷贝到相应的路径，默认为 dist，再根据我们的配置，修改打包后文件引用路径，使之指向正确的文件")]),a._v(" "),t("li",[a._v("url-loader：依赖 file-loader，当图片/文字文件小于 limit 值的时候，会将图片转为 base64 编码，大于 limit 值的时候依然是使用 file-loader 进行拷贝（在 webpack5，内置了资源处理模块，file-loader 和 url-loader 都可以不用安装）")]),a._v(" "),t("li",[a._v("img-loader：压缩图片")]),a._v(" "),t("li",[a._v("babel-loader： 将ES6转换为了 ES5， 为了避免 webpack.config.js 太臃肿，babeld的配置一般会单独提取到一个文件，在babel的配置文件里面也可以配置一些插件")])]),a._v(" "),t("blockquote",[t("p",[a._v("在这里补充下babel的其他知识")])]),a._v(" "),t("ul",[t("li",[a._v("@babel/core Babel 编译的核心包")]),a._v(" "),t("li",[a._v("@babel/preset-env Babel 编译的预设，可以理解为 Babel 插件的超集")])]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// ./babelrc.js")]),a._v("\nmodule"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("exports "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[a._v("presets")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"@babel/preset-env"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// useBuiltIns: false 默认值，无视浏览器兼容配置，引入所有 polyfill")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// useBuiltIns: entry 根据配置的浏览器兼容，引入浏览器不兼容的 polyfill")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// useBuiltIns: usage 会根据配置的浏览器兼容，以及你代码中用到的 API 来进行 polyfill，实现了按需添加")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[a._v("useBuiltIns")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"entry"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[a._v("corejs")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"3.9.1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 是 core-js 版本号")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[a._v("targets")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n          "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[a._v("chrome")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"58"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n          "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[a._v("ie")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"11"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("blockquote",[t("p",[a._v("对于正在提案中，还未进入 ECMA 规范中的新特性，Babel 是无法进行处理的，必须要安装对应的插件，并加上插件的配置")])]),a._v(" "),t("ul",[t("li",[a._v("vue-loader: 主要用来处理vue组件文件")]),a._v(" "),t("li",[a._v("eslint-loade: 将EsLint集成到webpack中")]),a._v(" "),t("li",[a._v("cache-loader：缓存一些性能开销比较大的 loader 的处理结果，提高构建速度")])]),a._v(" "),t("h2",{attrs:{id:"什么是bundle、chunk、module"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是bundle、chunk、module"}},[a._v("#")]),a._v(" 什么是bundle、chunk、module")]),a._v(" "),t("h2",{attrs:{id:"webpack的构建流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack的构建流程"}},[a._v("#")]),a._v(" webpack的构建流程")]),a._v(" "),t("h2",{attrs:{id:"webpack各个loader的作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack各个loader的作用"}},[a._v("#")]),a._v(" webpack各个loader的作用")]),a._v(" "),t("ul",[t("li",[a._v("babel-loader：转换ES6代码")]),a._v(" "),t("li",[a._v("css-loader：")]),a._v(" "),t("li",[a._v("style-loader：")])]),a._v(" "),t("h2",{attrs:{id:"webpack打包是如何优化前端性能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack打包是如何优化前端性能"}},[a._v("#")]),a._v(" webpack打包是如何优化前端性能")]),a._v(" "),t("ul",[t("li",[a._v("压缩各类文件")]),a._v(" "),t("li")])])}),[],!1,null,null,null);s.default=r.exports}}]);