(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{539:function(a,n,o){"use strict";o.r(n);var t=o(56),e=Object(t.a)({},(function(){var a=this,n=a.$createElement,o=a._self._c||n;return o("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[o("h3",{attrs:{id:"为了方便前后端分离-学习一下假数据"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#为了方便前后端分离-学习一下假数据"}},[a._v("#")]),a._v(" 为了方便前后端分离，学习一下假数据")]),a._v(" "),o("hr"),a._v(" "),o("p",[o("a",{attrs:{href:"http://mockjs.com/",target:"_blank",rel:"noopener noreferrer"}},[a._v("参考文档"),o("OutboundLink")],1)]),a._v(" "),o("ol",[o("li",[a._v("安装mock.js "),o("code",[a._v("npm install mockjs")])]),a._v(" "),o("li",[a._v("在项目的src目录下新建mock.js文件，并添加如下代码"),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[a._v("import Mock from 'mockjs'\n\nconst Random = Mock.Random;\n\nfunction getData(){\nlet datalist= [];\nfor (let i = 0; i < 100; i++) {\n    let newData = {\n    title: Random.csentence(5, 30), //  Random.csentence( min, max )\n    thumbnail_pic_s: Random.dataImage('300x250', 'mock的图片'), // Random.dataImage( size, text ) 生成一段随机的 Base64 图片编码\n    author_name: Random.cname(), // Random.cname() 随机生成一个常见的中文姓名\n    date: Random.date() + ' ' + Random.time() // Random.date()指示生成的日期字符串的格式,默认为yyyy-MM-dd；Random.time() 返回一个随机的时间字符串\n    }\n    datalist.push(newData)\n}\nreturn {\n    data: datalist\n}\n}\nconst data = Mock.mock('/msg1',getData)\nexport default {data};\n// 上面代码中的getData()函数是用来批量生成数据的，Mock.mock()函数的第一个参数是被请求的url，第二个参数是后端要返回给前端的数据，写好之后我们将该接口导出\n")])])]),o("ol",{attrs:{start:"3"}},[o("li",[a._v("测试模拟出来的数据，在要引入数据的页面添加如下代码")])]),a._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[a._v("<button @click=\"fasong\">mockDate</button>\n\nmethods:{\n    mockDate(){\n    axios.get('/msg1').then(response => {\n        let res = response.data\n        console.log(res)\n    })\n    }\n}\n")])])])])]),a._v(" "),o("h3",{attrs:{id:"常用api"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#常用api"}},[a._v("#")]),a._v(" 常用API")]),a._v(" "),o("p",[o("strong",[a._v("Basic")]),a._v("\nRandom.boolean( min?, max?, current? )返回一个随机的布尔值")]),a._v(" "),o("p",[a._v("Random.natural( min?, max? )返回一个随机的自然数（大于等于 0 的整数）")]),a._v(" "),o("p",[a._v("Random.integer( min?, max? )返回一个随机的整数")]),a._v(" "),o("p",[a._v("Random.float( min?, max?, dmin?, dmax? )返回一个随机的浮点数")]),a._v(" "),o("p",[a._v("Random.character( pool? )返回一个随机字符")]),a._v(" "),o("p",[a._v("Random.string( pool?, min?, max? )返回一个随机字符串")]),a._v(" "),o("p",[a._v("Random.range( start?, stop, step? )返回一个整型数组")]),a._v(" "),o("p",[o("strong",[a._v("Date")]),a._v("\nRandom.date( format? )返回一个随机的日期字符串")]),a._v(" "),o("p",[a._v("Random.time( format? )返回一个随机的时间字符串")]),a._v(" "),o("p",[a._v("Random.datetime( format? )返回一个随机的日期和时间字符串")]),a._v(" "),o("p",[a._v("Random.now( unit?, format? )返回当前的日期和时间字符串")]),a._v(" "),o("p",[o("strong",[a._v("Image")]),a._v("\nRandom.image( size?, background?, foreground?, format?, text? )生成一个随机的图片地址 Random.dataImage( size?, text? )生成一段随机的 Base64 图片编码")]),a._v(" "),o("p",[o("strong",[a._v("Color")]),a._v("\nRandom.color()随机生成一个有吸引力的颜色，格式为 '#RRGGBB'")]),a._v(" "),o("p",[a._v("Random.hex()随机生成一个有吸引力的颜色，格式为 '#RRGGBB'。")]),a._v(" "),o("p",[a._v("Random.rgb()随机生成一个有吸引力的颜色，格式为 'rgb(r, g, b)'")]),a._v(" "),o("p",[a._v("Random.rgba()随机生成一个有吸引力的颜色，格式为 'rgba(r, g, b, a)'")]),a._v(" "),o("p",[a._v("Random.hsl()随机生成一个有吸引力的颜色，格式为 'hsl(h, s, l)'")]),a._v(" "),o("p",[o("strong",[a._v("Text")]),a._v("\nRandom.paragraph( min?, max? )随机生成一段文本")]),a._v(" "),o("p",[a._v("Random.cparagraph( min?, max? )随机生成一段中文文本")]),a._v(" "),o("p",[a._v("Random.sentence( min?, max? )随机生成一个句子，第一个单词的首字母大写")]),a._v(" "),o("p",[a._v("Random.csentence( min?, max? )随机生成一段中文文本")]),a._v(" "),o("p",[a._v("Random.word( min?, max? )随机生成一个单词")]),a._v(" "),o("p",[a._v("Random.cword( pool?, min?, max? )随机生成一个汉字")]),a._v(" "),o("p",[a._v("Random.title( min?, max? )随机生成一句标题，其中每个单词的首字母大写")]),a._v(" "),o("p",[a._v("Random.ctitle( min?, max? )随机生成一句中文标题")]),a._v(" "),o("p",[o("strong",[a._v("Name")]),a._v("\nRandom.first() 随机生成一个常见的英文名")]),a._v(" "),o("p",[a._v("Random.last()随机生成一个常见的英文姓")]),a._v(" "),o("p",[a._v("Random.name( middle? )随机生成一个常见的英文姓名")]),a._v(" "),o("p",[a._v("Random.cfirst()随机生成一个常见的中文名")]),a._v(" "),o("p",[a._v("Random.clast()随机生成一个常见的中文姓")]),a._v(" "),o("p",[a._v("Random.cname()随机生成一个常见的中文姓名")]),a._v(" "),o("p",[o("strong",[a._v("Web")]),a._v("\nRandom.url( protocol?, host? )随机生成一个 URL")]),a._v(" "),o("p",[a._v("Random.protocol()随机生成一个 URL 协议")]),a._v(" "),o("p",[a._v("Random.domain()随机生成一个域名")]),a._v(" "),o("p",[a._v("Random.tld()随机生成一个顶级域名（Top Level Domain）")]),a._v(" "),o("p",[a._v("Random.email( domain? )随机生成一个邮件地址")]),a._v(" "),o("p",[a._v("Random.ip()随机生成一个 IP 地址 Address")]),a._v(" "),o("p",[a._v("Random.region()随机生成一个（中国）大区")]),a._v(" "),o("p",[a._v("Random.province()随机生成一个（中国）省（或直辖市、自治区、特别行政区）")]),a._v(" "),o("p",[a._v("Random.city( prefix? )随机生成一个（中国）市")]),a._v(" "),o("p",[a._v("Random.county( prefix? )随机生成一个（中国）县")]),a._v(" "),o("p",[a._v("Random.zip()随机生成一个邮政编码（六位数字）")]),a._v(" "),o("p",[o("strong",[a._v("Helper")]),a._v("\nRandom.capitalize( word )把字符串的第一个字母转换为大写")]),a._v(" "),o("p",[a._v("Random.upper( str )把字符串转换为大写")]),a._v(" "),o("p",[a._v("Random.lower( str )把字符串转换为小写")]),a._v(" "),o("p",[a._v("Random.pick( arr )从数组中随机选取一个元素，并返回")]),a._v(" "),o("p",[a._v("Random.shuffle( arr )打乱数组中元素的顺序，并返回 Miscellaneous")]),a._v(" "),o("p",[a._v("Random.guid()随机生成一个 GUID")]),a._v(" "),o("p",[a._v("Random.id()随机生成一个 18 位身份证")]),a._v(" "),o("p",[a._v("Random.increment( step? )生成一个全局的自增整数")])])}),[],!1,null,null,null);n.default=e.exports}}]);